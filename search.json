[{"path":"/articles/gghighlight.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Introduction to gghighlight","text":"Suppose data many series hard identify colours differences subtle.  filter data reasonable number lines, can use dplyr’s filter().  , seems handy. example, want change threshold predicate (max(value) > 20) highlight series well? ’s bit tiresome type code every time replace 20 value. Besides, considering one main purposes visualization get overview data, may good simply filter unmatched data plot lose context. comes gghighlight package, dplyr::filter() equivalent ggplot2. (interested details behind idea highlighting, please read post: Anatomy gghighlight.)","code":"set.seed(2) d <- purrr::map_dfr(   letters,   ~ data.frame(       idx = 1:400,       value = cumsum(runif(400, -1, 1)),       type = .,       flag = sample(c(TRUE, FALSE), size = 400, replace = TRUE),       stringsAsFactors = FALSE     ) ) library(ggplot2)  ggplot(d) +   geom_line(aes(idx, value, colour = type)) library(dplyr, warn.conflicts = FALSE)  d_filtered <- d %>%   group_by(type) %>%    filter(max(value) > 20) %>%   ungroup()  ggplot(d_filtered) +   geom_line(aes(idx, value, colour = type))"},{"path":"/articles/gghighlight.html","id":"gghighlight","dir":"Articles","previous_headings":"","what":"gghighlight()","title":"Introduction to gghighlight","text":"main function gghighlight package gghighlight(). example, using function, can highlight lines whose max values larger 20 seen :  can specify many predicates like. example, following code highlights data satisfies max(value) > 15 mean(flag) > 0.55.","code":"library(gghighlight)  ggplot(d) +   geom_line(aes(idx, value, colour = type)) +   gghighlight(max(value) > 20) #> label_key: type ggplot(d) +   geom_line(aes(idx, value, colour = type)) +   gghighlight(max(value) > 15, mean(flag) > 0.5) #> label_key: type"},{"path":"/articles/gghighlight.html","id":"customization","dir":"Articles","previous_headings":"","what":"Customization","title":"Introduction to gghighlight","text":"adding gghighlight() results ggplot object, fully customizable just usually ggplot2 like custom themes.  plot also can facetted:  also options control way highlighting. See “Options” section .","code":"ggplot(d) +   geom_line(aes(idx, value, colour = type)) +   gghighlight(max(value) > 19) +   theme_minimal() #> label_key: type ggplot(d) +   geom_line(aes(idx, value, colour = type)) +   gghighlight(max(value) > 19) +   theme_minimal() +   facet_wrap(~ type) #> label_key: type"},{"path":"/articles/gghighlight.html","id":"geoms","dir":"Articles","previous_headings":"","what":"Geoms","title":"Introduction to gghighlight","text":"gghighlight() can highlight almost every geom. examples.","code":""},{"path":"/articles/gghighlight.html","id":"bar","dir":"Articles","previous_headings":"Geoms","what":"Bar","title":"Introduction to gghighlight","text":"gghighlight() can highlight bars.  wondering really highlighted? Yes, . , unhighlighted bars overwritten highlighted bars. seems useful, see facetted version:","code":"p <- ggplot(iris, aes(Sepal.Length, fill = Species)) +   geom_histogram() +   gghighlight() #> label_key: Species  p #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. p + facet_wrap(~ Species) #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."},{"path":"/articles/gghighlight.html","id":"point","dir":"Articles","previous_headings":"Geoms","what":"Point","title":"Introduction to gghighlight","text":"explained Anatomy gghighlight, lines points typically different semantics (group-wise ). , cases, don’t need careful difference gghighlight() automatically picks right method calculation.  precisely, gghighlight() takes following strategy: group exists, use . Otherwise, assign group IDs based combination values discrete variables. group IDs exists, evaluate predicates grouped manner. group IDs doesn’t exist grouped calculation fails, evaluate predicates ungrouped manner. Note , case, label_key = type needed show labels gghighlight() chooses discrete variable mapping, aes(idx, value) consists continuous variables .","code":"set.seed(10) d2 <- dplyr::slice_sample(d, n = 20)  ggplot(d2, aes(idx, value)) +   geom_point() +   gghighlight(value > 0, label_key = type)"},{"path":"/articles/gghighlight.html","id":"non-logical-predicate","dir":"Articles","previous_headings":"","what":"Non-logical predicate","title":"Introduction to gghighlight","text":"construct predicate expression like , need determine threshold (example, 20). difficult choose nice one draw plots. , gghighlight() allows predicates return non-logical (e.g. numeric character) results. values used sorting data top max_highlight rows/groups highlighted:","code":"max(value) > 20 ggplot(d, aes(idx, value, colour = type)) +   geom_line() +   gghighlight(max(value), max_highlight = 5L) #> label_key: type"},{"path":"/articles/gghighlight.html","id":"labels","dir":"Articles","previous_headings":"","what":"Labels","title":"Introduction to gghighlight","text":"gghighlight() adds direct labels geoms. Currently, following geoms supported: point: add labels highlighted point. line: add labels right end highlighted line. bar: (add labels) don’t want labelled automatically, can specify use_direct_label = FALSE  Labels drawn geom_label_repel(). want customize labels, can pass parameters via label_params.  can also add labels . easy add labels highlighted data gghighlight() replaces plot’s data filtered one.","code":"ggplot(d) +   geom_line(aes(idx, value, colour = type)) +   gghighlight(max(value) > 20, use_direct_label = FALSE) ggplot(d) +   geom_line(aes(idx, value, colour = type)) +   gghighlight(max(value) > 20, label_params = list(size = 10)) #> label_key: type p <- ggplot(d2, aes(idx, value)) +   geom_point(size = 4) +   gghighlight(value > 0, use_direct_label = FALSE)  # the filtered data p$data #>    idx      value type  flag #> 3  380  6.6660069    n FALSE #> 4    8  0.3777038    e  TRUE #> 5  262 13.5285254    d FALSE #> 6  391 12.1243689    s  TRUE #> 7  339 16.0241787    y FALSE #> 9  239 14.6301167    s FALSE #> 12 202  3.7365540    i FALSE #> 14 152  6.5393768    y FALSE #> 16 319 19.2898939    s FALSE #> 17 360 13.0007351    s FALSE #> 20 214  4.1910452    z FALSE  p + geom_label(aes(label = type),                hjust = 1, vjust = 1, fill = \"purple\", colour = \"white\", alpha= 0.5)"},{"path":[]},{"path":"/articles/gghighlight.html","id":"unhighlighted_params","dir":"Articles","previous_headings":"Options","what":"unhighlighted_params","title":"Introduction to gghighlight","text":"want change style unhighlighted layers, use unhighlighted_params.  can also specify NULL fill colour preserve original color.","code":"ggplot(d) +   geom_line(aes(idx, value, colour = type), size = 5) +   gghighlight(max(value) > 19,               unhighlighted_params = list(size = 1, colour = alpha(\"pink\", 0.4))) #> label_key: type ggplot(d) +   geom_line(aes(idx, value, colour = type)) +   gghighlight(max(value) > 19,               # preserve colour and modify alpha instead               unhighlighted_params = list(colour = NULL, alpha = 0.3)) #> label_key: type"},{"path":"/articles/gghighlight.html","id":"keep_scales","dir":"Articles","previous_headings":"Options","what":"keep_scales","title":"Introduction to gghighlight","text":"want keep original scales, set keep_scales TRUE.","code":"p <- ggplot(mtcars, aes(wt, mpg, colour = factor(cyl))) +   geom_point()  p + gghighlight(cyl == 6) #> Warning: Tried to calculate with group_by(), but the calculation failed. #> Falling back to ungrouped filter operation...  p + gghighlight(cyl == 6, keep_scales = TRUE) + ggtitle(\"keep_scales = TRUE\") #> Warning: Tried to calculate with group_by(), but the calculation failed. #> Falling back to ungrouped filter operation..."},{"path":"/articles/gghighlight.html","id":"calculate_per_facet","dir":"Articles","previous_headings":"Options","what":"calculate_per_facet","title":"Introduction to gghighlight","text":"want highlight facet individually, set calculate_per_facet TRUE. Note gghighlight() affects plot gghighlight(). add facet_*() adding gghighlight(), option doesn’t work.","code":"d <- data.frame(   idx =   c(1, 2, 3, 4, 1, 2, 3, 4),   value = c(10, 11, 12, 13, 4, 8, 16, 32),   cat1 =  rep(c(\"a\", \"b\"), each = 4),   cat2 =  rep(rep(c(\"1-2\", \"3-4\"), each = 2), 2),   stringsAsFactors = FALSE )  p <- ggplot(d, aes(idx, value, colour = cat1)) +   geom_line() +   facet_wrap(vars(cat2))  p +   gghighlight(max(value) > 10) #> label_key: cat1  p +   gghighlight(max(value) > 10, calculate_per_facet = TRUE) +   ggtitle(\"calculate_per_facet = TRUE\") #> label_key: cat1"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hiroaki Yutani. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yutani H (2021). gghighlight: Highlight Lines Points 'ggplot2'. R package version 0.3.2.9000, https://github.com/yutannihilation/gghighlight/.","code":"@Manual{,   title = {gghighlight: Highlight Lines and Points in 'ggplot2'},   author = {Hiroaki Yutani},   year = {2021},   note = {R package version 0.3.2.9000},   url = {https://github.com/yutannihilation/gghighlight/}, }"},{"path":"/index.html","id":"gghighlight","dir":"","previous_headings":"","what":"Highlight Lines and Points in ggplot2","title":"Highlight Lines and Points in ggplot2","text":"Highlight geoms ggplot2.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Highlight Lines and Points in ggplot2","text":"","code":"install.packages(\"gghighlight\")  # Or the development version from GitHub: # install.packages(\"devtools\") devtools::install_github(\"yutannihilation/gghighlight\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Highlight Lines and Points in ggplot2","text":"Suppose data many series hard identify colours differences subtle.  gghighlight(), can highlight lines whose max values larger 20:  result usual ggplot object, fully customizable. example, can used custom themes facets.   gghighlight() can highlight almost geoms. details, please read Introduction gghighlight.","code":"library(ggplot2)  ggplot(d) +   geom_line(aes(idx, value, colour = type)) library(gghighlight)  p <- ggplot(d) +   geom_line(aes(idx, value, colour = type)) +   gghighlight(max(value) > 19) #> label_key: type  p p + theme_minimal() p + theme_minimal() + facet_wrap(~ type)"},{"path":"/reference/gghighlight-old.html","id":null,"dir":"Reference","previous_headings":"","what":"Highlight Data With Predicate — gghighlight-old","title":"Highlight Data With Predicate — gghighlight-old","text":"gghiglight_line() gghighlight_point() deprecated. Please use gghighlight() instead.","code":""},{"path":"/reference/gghighlight-old.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highlight Data With Predicate — gghighlight-old","text":"","code":"gghighlight_line(...)  gghighlight_point()"},{"path":"/reference/gghighlight-old.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highlight Data With Predicate — gghighlight-old","text":"... Ignored.","code":""},{"path":"/reference/gghighlight-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Highlight Lines and Points in 'ggplot2' — gghighlight-package","title":"Highlight Lines and Points in 'ggplot2' — gghighlight-package","text":"Make easier explore data highlights.","code":""},{"path":"/reference/gghighlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Highlight Data With Predicate — gghighlight","title":"Highlight Data With Predicate — gghighlight","text":"gghiglight() highlights (almost) geoms according given predicates.","code":""},{"path":"/reference/gghighlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highlight Data With Predicate — gghighlight","text":"","code":"gghighlight(   ...,   n = NULL,   max_highlight = 5L,   unhighlighted_params = list(),   use_group_by = NULL,   use_direct_label = NULL,   label_key = NULL,   label_params = list(fill = \"white\"),   keep_scales = FALSE,   calculate_per_facet = FALSE,   unhighlighted_colour = NULL )"},{"path":"/reference/gghighlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highlight Data With Predicate — gghighlight","text":"... Expressions filter data, passed dplyr::filter(). n Number layers clone. max_highlight Max number series highlight. unhighlighted_params Aesthetics (e.g. colour, fill, size) unhighlighted geoms. Specifying colour = NULL fill = NULL preserve original colour. use_group_by TRUE, use dplyr::group_by() evaluate predicate. use_direct_label TRUE, add labels directly plot instead using legend. label_key Column name label aesthetics. label_params list parameters, passed ggrepel::geom_label_repel(). keep_scales TRUE, keep original data ggplot2::geom_blank() highlighted plot scale data. calculate_per_facet (Experimental) TRUE, include facet variables calculate grouping; words, highlighting done facet individually. unhighlighted_colour (Deprecated) Colour unhighlighted geoms.","code":""},{"path":"/reference/gghighlight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Highlight Data With Predicate — gghighlight","text":"","code":"d <- data.frame(   idx = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   value = c(1, 2, 3, 10, 11, 12, 9, 10, 11),   category = rep(c(\"a\", \"b\", \"c\"), 3),   stringsAsFactors = FALSE )  # Highlight the lines whose max values are larger than 10 ggplot(d, aes(idx, value, colour = category)) +   geom_line() + gghighlight(max(value) > 10) #> label_key: category   # Highlight the points whose values are larger than 10 ggplot(d, aes(idx, value)) +   geom_point() +   gghighlight(value > 10, label_key = category)   # Specify the styles for unhighlighted layer ggplot(d, aes(idx, value, colour = category)) +   geom_line(size = 5) +   gghighlight(max(value) > 10,     unhighlighted_params = list(size = 1)   ) #> label_key: category"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr n ggplot2 aes","code":""},{"path":[]},{"path":"/news/index.html","id":"gghighlight-032","dir":"Changelog","previous_headings":"","what":"gghighlight 0.3.2","title":"gghighlight 0.3.2","text":"CRAN release: 2021-06-05 gghighlight() now accepts n() can highlight based number rows within group (#154). gghighlight() now preserves colour fill explicit NULL specified unhighlighted_params (.e. unhighlighted_params = list(colour = NULL)) (#152). Fix longstanding bug wrong calculation data name columns aesthetics, e.g. x (#168).","code":""},{"path":"/news/index.html","id":"gghighlight-031","dir":"Changelog","previous_headings":"","what":"gghighlight 0.3.1","title":"gghighlight 0.3.1","text":"CRAN release: 2020-12-12 gghighlight() now can add labels discrete scales (#160).","code":""},{"path":"/news/index.html","id":"gghighlight-030","dir":"Changelog","previous_headings":"","what":"gghighlight 0.3.0","title":"gghighlight 0.3.0","text":"CRAN release: 2020-03-29","code":""},{"path":"/news/index.html","id":"breaking-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"gghighlight 0.3.0","text":"gghighlight_point() gghighlight_line(), deprecated gghighlight 0.1.0, now defunct (#132).","code":""},{"path":"/news/index.html","id":"gghighlight-020","dir":"Changelog","previous_headings":"","what":"gghighlight 0.2.0","title":"gghighlight 0.2.0","text":"CRAN release: 2020-01-25","code":""},{"path":"/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"gghighlight 0.2.0","text":"gghighlight() gets new argument unhighlighted_params, accepts list parameters unhighlighted layer (e.g. colour, fill, shape, size). Accordingly, unhighlighted_colour deprecated (#76). gghighlight() gets new argument keep_scales choose whether keep original scale shadowed data (#72). gghighlight() gets new (experimental) argument calculate_per_facet choose whether calculate highlighting per facet (#14).","code":""},{"path":"/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"gghighlight 0.2.0","text":"mapping group, use grouping variable, consistent logic ggplot2 (#77). gghighlight() now ignores calculation fails layers. useful combine layers annotate() (#78). gghighlight() now allows highlight 0-layer plots, means just filtering plot data (#81). gghighlight() now ignores NAs numeric predicates (#86).","code":""},{"path":"/news/index.html","id":"gghighlight-010","dir":"Changelog","previous_headings":"","what":"gghighlight 0.1.0","title":"gghighlight 0.1.0","text":"CRAN release: 2018-07-04 Add gghighlight(), replaces current gghighlight_line() gghighlight_point(); functions now deprecated. Add introductory vignette.","code":""},{"path":"/news/index.html","id":"gghighlight-001","dir":"Changelog","previous_headings":"","what":"gghighlight 0.0.1","title":"gghighlight 0.0.1","text":"CRAN release: 2017-10-05 First release","code":""}]
