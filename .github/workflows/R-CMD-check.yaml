on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check
env:
  cache-version: v1

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: "${{ matrix.config.os }} (R:${{ matrix.config.r }}, dev:${{ matrix.config.use_dev_packages }})"

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest,   r: 'release'}
          - {os: macOS-latest,   r: 'release', use_dev_packages: true}
          - {os: macOS-latest,   r: 'devel'}
          - {os: ubuntu-18.04,   r: 'release', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}
          - {os: ubuntu-18.04,   r: 'release', use_devel: true}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: Setup Devel R
        if: ${{ matrix.config.use_devel }}
        run: 
          wget -O - https://github.com/yutannihilation/r-svn/releases/download/tag-bc5b6a87c5be83e641deccab8dff233b7b439012-ubuntu-16.04/R-devel.tar.xz | sudo tar -x -J --strip-components=2 -f - -C /usr/local/
        
      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          cat(version$major, ".", version$minor, file = ".github/version", sep = "")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ env.cache-version }}-${{ matrix.config.os }}-r-${{ hashFiles('.github/version') }}-${{ matrix.config.use_dev_packages }}-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-${{ matrix.config.os }}-r-${{ hashFiles('.github/version') }}-${{ matrix.config.use_dev_packages }}-

      - name: Install system dependencies on Linux
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          # Use cran:libgit2 PPA to avoid conflicts of libcurl4-gnutls-dev
          sudo add-apt-repository ppa:cran/libgit2

          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

          # Since sf dependencies are a bit heavy, install them only when they are needed
          SF_NEEDS_UPDATED=$(Rscript -e 'if (!"sf" %in% installed.packages()[,"Package"] || "sf" %in% old.packages()[,"Package"]) cat("yes")')
          if [ "${SF_NEEDS_UPDATED}" == "yes" ]; then
            sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable
            sudo apt update
            sudo apt install \
              libudunits2-dev \
              libgdal-dev \
              libgeos-dev \
              libproj-dev
          fi

      - name: Install system dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          # XQuartz is needed by vdiffr
          brew cask install xquartz

          # To install vdiffr, these three libraries/tools are needed in addition to XQuartz
          # - freetype (already installed, needed by systemfonts)
          # - cairo (not installed, needed by gdtools)
          # - pkg-config (not installed, needed to set proper build settings)
          brew install pkg-config cairo

          # Since sf dependencies are a bit heavy, install them only when they are needed
          SF_NEEDS_UPDATED=$(Rscript -e 'if (!"sf" %in% installed.packages()[,"Package"] || "sf" %in% old.packages()[,"Package"]) cat("yes")')
          if [ "${SF_NEEDS_UPDATED}" == "yes" ]; then
            brew install udunits gdal
          fi

      - name: Install dev version of packages
        if: ${{ matrix.config.use_dev_packages }}
        run: |
          remotes::install_github('tidyverse/ggplot2')
          remotes::install_github('tidyverse/dplyr')
        shell: Rscript {0}

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
